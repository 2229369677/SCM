C51 COMPILER V9.60.7.0   MAIN                                                              10/20/2024 16:21:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          //用多字节读写模式访问EEPROM，依次加i后写回
   2          
   3          #include <REG52.H>
   4          
   5          extern void InitLcd1602();
   6          extern void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str);
   7          extern void I2CStart();
   8          extern void I2CStop();
   9          extern unsigned char I2CReadACK();
  10          extern unsigned char I2CReadNAK();
  11          extern bit I2CWrite(unsigned char dat);
  12          void E2Read(unsigned char *buf,unsigned char addr,unsigned char len);
  13          void E2Write(unsigned char *buf,unsigned char addr,unsigned char len);
  14          void MemToStr(unsigned char *str, unsigned char *src, unsigned char len);
  15          
  16          void main(){
  17   1              unsigned char i;
  18   1              unsigned char buf[5];
  19   1              unsigned char str[20];
  20   1              
  21   1              InitLcd1602();
  22   1              E2Read(buf,0x90,sizeof(buf));//从E2中读取一段数据
  23   1              MemToStr(str,buf,sizeof(buf));//转换为16进制字符串
  24   1              LcdShowStr(0,0,str);
  25   1              for(i = 0;i<sizeof(buf);i++){
  26   2                      buf[i] = buf[i]+i;
  27   2              }
  28   1              E2Write(buf,0x90,sizeof(buf));//在写回去
  29   1              
  30   1              while(1);
  31   1      }
  32          
  33          void MemToStr(unsigned char *str, unsigned char *src, unsigned char len){
  34   1              unsigned char tmp;
  35   1              while(len--){
  36   2                      tmp = *src>>4;
  37   2                      if(tmp<=9){
  38   3                              *str++ = tmp+'0';
  39   3                      }else{
  40   3                              *str++ = tmp-10+'A';
  41   3                      }
  42   2                      tmp = *src & 0x0f;
  43   2                      if(tmp<=9){
  44   3                              *str++ = tmp+'0';
  45   3                      }else{
  46   3                              *str++ = tmp-10+'A';
  47   3                      }
  48   2                      *str++=' ';
  49   2                      src++;
  50   2              }
  51   1              *str = '\0';
  52   1      }
  53          
  54          void E2Read(unsigned char *buf,unsigned char addr,unsigned char len){
C51 COMPILER V9.60.7.0   MAIN                                                              10/20/2024 16:21:34 PAGE 2   

  55   1              do{
  56   2                      I2CStart();
  57   2                      if(I2CWrite((0x50)<<1)){
  58   3                              break;
  59   3                      }
  60   2                      I2CStop();
  61   2              }while(1);
  62   1              I2CWrite(addr);
  63   1              I2CStart();
  64   1              I2CWrite((0x50<<1)|0x01);//读
  65   1              while(len>1){
  66   2                      *buf++ = I2CReadACK();
  67   2                      len--;
  68   2              }
  69   1              *buf = I2CReadNAK();
  70   1              I2CStop();
  71   1      }
  72          
  73          //E2写入函数,buf-源数据指针，addr-E2中的起始地址，len写入长度
  74          void E2Write(unsigned char *buf,unsigned char addr,unsigned char len){
  75   1              while(len--){
  76   2                      do{
  77   3                              I2CStart();
  78   3                              if(I2CWrite(0x50<<1)){
  79   4                                      break;
  80   4                              }
  81   3                              I2CStop();
  82   3                      }while(1);
  83   2                      I2CWrite(addr++);
  84   2                      I2CWrite(*buf++);
  85   2                      I2CStop();
  86   2              }
  87   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    401    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      42
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
