C51 COMPILER V9.60.7.0   KEYBOARD                                                          10/16/2024 14:26:22 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN .\Objects\keyboard.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE keyboard.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -keyboard.lst) TABS(2) OBJECT(.\Objects\keyboard.obj)

line level    source

   1          #include <REG52.H>
   2          
   3          sbit KEY_IN_1  = P2^4;
   4          sbit KEY_IN_2  = P2^5;
   5          sbit KEY_IN_3  = P2^6;
   6          sbit KEY_IN_4  = P2^7;
   7          sbit KEY_OUT_1 = P2^3;
   8          sbit KEY_OUT_2 = P2^2;
   9          sbit KEY_OUT_3 = P2^1;
  10          sbit KEY_OUT_4 = P2^0;
  11          
  12          //按键映射
  13          unsigned char code KeyCodeMap[4][4] ={
  14            {'1','2','3',0x26},
  15            {'4','5','6',0x25},
  16            {'7','8','9',0x28},
  17            {'0',0x1B,0x0D,0x27}
  18          };//将数据存储在ROM
  19          
  20          unsigned char pdata KeySta[4][4] = {  //按键当前状态
  21              {1, 1, 1, 1},  {1, 1, 1, 1},  {1, 1, 1, 1},  {1, 1, 1, 1}
  22          };//将数据存储在外部扩展RAM的低256字节空间
  23          
  24          extern void KeyAction(unsigned char n);
  25          
  26          //按键驱动
  27          void KeyDriver(){
  28   1        unsigned char i,j;
  29   1        static unsigned char pdata backup[4][4] = {  //按键值备份，保存前一次的值
  30   1          {1, 1, 1, 1},  {1, 1, 1, 1},  {1, 1, 1, 1},  {1, 1, 1, 1}
  31   1        };
  32   1          
  33   1        for(i = 0;i<4;i++){
  34   2          for(j = 0;j<4;j++){
  35   3            if(KeySta[i][j]!=backup[i][j]){//按键发生变化
  36   4              if(backup[i][j]!=0){//前一次是高电压
  37   5                KeyAction(KeyCodeMap[i][j]);
  38   5              }
  39   4              backup[i][j] = KeySta[i][j];//更新值
  40   4            }
  41   3          }
  42   2        }
  43   1      }
  44          
  45          
  46          void KeyScan(){
  47   1        unsigned char i;
  48   1        static unsigned char keyout = 0;//矩阵按键扫描输入索引
  49   1        static unsigned char keybuf[4][4] = {
  50   1          {0xff,0xff,0xff,0xff},
  51   1          {0xff,0xff,0xff,0xff},
  52   1          {0xff,0xff,0xff,0xff},
  53   1          {0xff,0xff,0xff,0xff}
  54   1        };
C51 COMPILER V9.60.7.0   KEYBOARD                                                          10/16/2024 14:26:22 PAGE 2   

  55   1        
  56   1        //将第一行4个按键移入缓冲区
  57   1        keybuf[keyout][0] = (keybuf[keyout][0]<<1)|KEY_IN_1;
  58   1        keybuf[keyout][1] = (keybuf[keyout][1]<<1)|KEY_IN_2;
  59   1        keybuf[keyout][2] = (keybuf[keyout][2]<<1)|KEY_IN_3;
  60   1        keybuf[keyout][3] = (keybuf[keyout][3]<<1)|KEY_IN_4;
  61   1        //消抖后更新按键状态
  62   1        for(i = 0;i<4;i++){
  63   2          if((keybuf[keyout][i]&0x0f)==0x00){//4位都是0
  64   3            KeySta[keyout][i] = 0;
  65   3          }
  66   2          else if(keybuf[keyout][i]&0x0f==0x0f){
  67   3            KeySta[keyout][i] = 1;
  68   3          }
  69   2        }
  70   1        keyout++;
  71   1        keyout &= 0x03;
  72   1        switch(keyout){
  73   2          case 0: KEY_OUT_4 = 1; KEY_OUT_1 = 0; break;
  74   2          case 1: KEY_OUT_1 = 1; KEY_OUT_2 = 0; break;
  75   2          case 2: KEY_OUT_2 = 1; KEY_OUT_3 = 0; break;
  76   2          case 3: KEY_OUT_3 = 1; KEY_OUT_4 = 0; break;
  77   2          default: break;
  78   2        }
  79   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    327    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     32    ----
   DATA SIZE        =     17       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
